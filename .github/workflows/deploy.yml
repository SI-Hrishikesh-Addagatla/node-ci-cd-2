name: CI/CD Pipeline

on:
  push:
    branches: 
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with: 
          node-version: '18'
          cache: 'npm' 
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci 

      - name: Run tests
        run: npm test
        
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with: 
          node-version: '18'

      - name: Install dependencies
        run: npm ci
      
      - name: Run application
        run: nohup npm start & sleep 10
  
  deploy:
    runs-on: ubuntu-latest
    needs: [test, build] 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t hrishi0304/github-act-node-1:v1 .

      - name: Push Docker image
        run: docker push hrishi0304/github-act-node-1:v1
      
      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            docker pull hrishi0304/github-act-node-1:v1
            docker stop myapp || true
            docker rm myapp || true
            docker run -d -p 3000:3000 --name myapp hrishi0304/github-act-node-1:v1
          EOF
  